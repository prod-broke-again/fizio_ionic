// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
import axios from 'axios';

const testWorkoutProgressAPI = async () => {
  console.log('üîß Testing Workout Progress API...');

  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —Ç–æ–∫–µ–Ω, —á—Ç–æ –∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    const token = localStorage.getItem('auth_token') || 'your_token_here';

    const response = await axios.get('http://fizio.online/api/v2/user/workout-progress', {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Accept': 'application/json'
      }
    });

    console.log('üìä API Response:', response.data);

    if (response.data && response.data.success) {
      const workouts = response.data.data || [];
      console.log('‚úÖ Workouts loaded:', workouts.length);

      workouts.forEach(workout => {
        console.log(`üèãÔ∏è Program ${workout.program?.id} (${workout.program?.name}):`, {
          completed_at: workout.completed_at,
          isCompleted: !!workout.completed_at,
          exercise: workout.exercise?.name
        });
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —Å—Ç–∞—Ç—É—Å–æ–≤
      console.log('\nüîç Testing status logic...');
      if (workouts.length > 0) {
        const programId = workouts[0].program?.id;
        console.log(`Checking status for program ${programId}:`);

        // isStarted - –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
        const isStarted = workouts.some(w => w.program?.id === programId);
        console.log('- isStarted:', isStarted);

        // isActive - –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        const isActive = workouts.some(w =>
          w.program?.id === programId &&
          (w.completed_at === null || w.completed_at === undefined || w.completed_at === '')
        );
        console.log('- isActive:', isActive);

        // isCompleted - –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö
        const hasCompleted = workouts.some(w =>
          w.program?.id === programId &&
          w.completed_at &&
          w.completed_at !== null &&
          w.completed_at !== undefined &&
          w.completed_at !== ''
        );
        const hasActive = workouts.some(w =>
          w.program?.id === programId &&
          (!w.completed_at || w.completed_at === null || w.completed_at === undefined || w.completed_at === '')
        );
        const isCompleted = hasCompleted && !hasActive;
        console.log('- isCompleted:', isCompleted, { hasCompleted, hasActive });
      }

    } else {
      console.log('‚ùå No success response');
    }

  } catch (error) {
    console.error('‚ùå API Error:', error.response?.data || error.message);
  }
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testWorkoutProgressAPI();
