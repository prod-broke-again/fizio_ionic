import axios from 'axios';

const API_URL = 'https://fizio.online/api';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º URL
const api = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json',
    'Accept': 'application/json'
  }
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
api.interceptors.request.use(
  config => {
    try {
      const method = config.method?.toUpperCase();
      const url = config.url;
      const hasParams = config.params ? Object.keys(config.params).length : 0;
      console.log('üöÄ API Request:', { method, url, paramsKeys: hasParams });
    } catch (_) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    return config;
  },
  error => {
    try { 
      console.error('‚ùå API Request Error:', error?.message || error); 
    } catch (_) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    return Promise.reject(error);
  }
);

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ (–æ–±–ª–µ–≥—á—ë–Ω–Ω—ã–µ –ª–æ–≥–∏, –±–µ–∑ –±–æ–ª—å—à–∏—Ö payload)
api.interceptors.response.use(
  response => {
    try {
      const url = response.config.url;
      const status = response.status;
      const dataInfo = (() => {
        const d = response.data;
        if (d == null) return 'null';
        if (Array.isArray(d)) return `array(len=${d.length})`;
        if (typeof d === 'object') return `object(keys=${Object.keys(d).length})`;
        return typeof d;
      })();
      console.log('‚úÖ API Response:', { url, status, data: dataInfo });
    } catch (_) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    return response;
  },
  error => {
    if (error.response?.status === 401) {
      // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ 401: –æ—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      // –í–†–ï–ú–ï–ù–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Å–ø–ª–µ—à-—Å–∫—Ä–∏–Ω–∞
      try { 
        sessionStorage.removeItem('access_token'); 
      } catch (_) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–∞
      }
      try {
        const currentPath = typeof window !== 'undefined' ? window.location.pathname : undefined;
        const isAuthRoute = currentPath === '/login' || currentPath === '/register' || currentPath === '/';
        if (!isAuthRoute && typeof window !== 'undefined') {
          window.location.replace('/');
        }
      } catch (_) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    }

    try {
      console.error('‚ùå API Response Error:', {
        url: error.config?.url,
        status: error.response?.status,
        message: error.message
      });
    } catch (_) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    }
    return Promise.reject(error);
  }
);

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –∫ –∑–∞–ø—Ä–æ—Å–∞–º
api.interceptors.request.use(
  config => {
    // –í–†–ï–ú–ï–ù–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Å–ø–ª–µ—à-—Å–∫—Ä–∏–Ω–∞
    const token = sessionStorage.getItem('access_token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    // –ù–µ –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã, —á—Ç–æ–±—ã —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –Ω–µ –ø—Ä–∏–≤–æ–¥–∏–ª –∫ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º –¥–∞–Ω–Ω—ã–º
    config.headers['Cache-Control'] = 'no-cache';
    config.headers.Pragma = 'no-cache';
    config.headers.Expires = '0';
    // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try {
      const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
      if (timezone) {
        config.headers['X-Timezone'] = timezone;
      }
    } catch (e) {
      console.error('Error getting timezone:', e);
    }
    return config;
  }
);

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–æ–º
export const TokenUtils = {
  isAuthenticated() {
    // –í–†–ï–ú–ï–ù–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Å–ø–ª–µ—à-—Å–∫—Ä–∏–Ω–∞
    // TODO: –í–µ—Ä–Ω—É—Ç—å localStorage –ø–æ—Å–ª–µ –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return sessionStorage.getItem('access_token') !== null;
  },

  getToken() {
    // –í–†–ï–ú–ï–ù–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Å–ø–ª–µ—à-—Å–∫—Ä–∏–Ω–∞
    return sessionStorage.getItem('access_token');
  },
  
  setToken(token: string) {
    if (token) {
      // –í–†–ï–ú–ï–ù–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Å–ø–ª–µ—à-—Å–∫—Ä–∏–Ω–∞
      sessionStorage.setItem('access_token', token);
      return true;
    }
    return false;
  },

  clearAuth() {
    // –í–†–ï–ú–ï–ù–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Å–ø–ª–µ—à-—Å–∫—Ä–∏–Ω–∞
    sessionStorage.removeItem('access_token');
  }
};

export default api; 